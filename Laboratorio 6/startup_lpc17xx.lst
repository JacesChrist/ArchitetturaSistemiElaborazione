


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ********************//**
    2 00000000         ; * @file     startup_LPC17xx.s
    3 00000000         ; * @brief    CMSIS Cortex-M3 Core Device Startup File f
                       or
    4 00000000         ; *           NXP LPC17xx Device Series
    5 00000000         ; * @version  V1.10
    6 00000000         ; * @date     06. April 2011
    7 00000000         ; *
    8 00000000         ; * @note
    9 00000000         ; * Copyright (C) 2009-2011 ARM Limited. All rights rese
                       rved.
   10 00000000         ; *
   11 00000000         ; * @par
   12 00000000         ; * ARM Limited (ARM) is supplying this software for use
                        with Cortex-M
   13 00000000         ; * processor based microcontrollers.  This file can be 
                       freely distributed
   14 00000000         ; * within development tools that are supporting such AR
                       M based processors.
   15 00000000         ; *
   16 00000000         ; * @par
   17 00000000         ; * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, W
                       HETHER EXPRESS, IMPLIED
   18 00000000         ; * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED
                        WARRANTIES OF
   19 00000000         ; * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
                        APPLY TO THIS SOFTWARE.
   20 00000000         ; * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR S
                       PECIAL, INCIDENTAL, OR
   21 00000000         ; * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   22 00000000         ; *
   23 00000000         ; ******************************************************
                       ************************/
   24 00000000         
   25 00000000         ; *------- <<< Use Configuration Wizard in Context Menu 
                       >>> ------------------
   26 00000000         
   27 00000000         ; <h> Stack Configuration
   28 00000000         ;   <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   29 00000000         ; </h>
   30 00000000         
   31 00000000 00000200 
                       Stack_Size
                               EQU              0x00000200
   32 00000000         
   33 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   34 00000000         Stack_Mem
                               SPACE            Stack_Size
   35 00000200         __initial_sp
   36 00000200         
   37 00000200         
   38 00000200         ; <h> Heap Configuration
   39 00000200         ;   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   40 00000200         ; </h>
   41 00000200         
   42 00000200 00000000 
                       Heap_Size



ARM Macro Assembler    Page 2 


                               EQU              0x00000000
   43 00000200         
   44 00000200                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   45 00000000         __heap_base
   46 00000000         Heap_Mem
                               SPACE            Heap_Size
   47 00000000         __heap_limit
   48 00000000         
   49 00000000         
   50 00000000                 PRESERVE8
   51 00000000                 THUMB
   52 00000000         
   53 00000000         
   54 00000000         ; Vector Table Mapped to Address 0 at Reset
   55 00000000         
   56 00000000                 AREA             RESET, DATA, READONLY
   57 00000000                 EXPORT           __Vectors
   58 00000000         
   59 00000000 00000000 
                       __Vectors
                               DCD              __initial_sp ; Top of Stack
   60 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   61 00000008 00000000        DCD              NMI_Handler ; NMI Handler
   62 0000000C 00000000        DCD              HardFault_Handler ; Hard Fault 
                                                            Handler
   63 00000010 00000000        DCD              MemManage_Handler 
                                                            ; MPU Fault Handler
                                                            
   64 00000014 00000000        DCD              BusFault_Handler 
                                                            ; Bus Fault Handler
                                                            
   65 00000018 00000000        DCD              UsageFault_Handler ; Usage Faul
                                                            t Handler
   66 0000001C 00000000        DCD              0           ; Reserved
   67 00000020 00000000        DCD              0           ; Reserved
   68 00000024 00000000        DCD              0           ; Reserved
   69 00000028 00000000        DCD              0           ; Reserved
   70 0000002C 00000000        DCD              SVC_Handler ; SVCall Handler
   71 00000030 00000000        DCD              DebugMon_Handler ; Debug Monito
                                                            r Handler
   72 00000034 00000000        DCD              0           ; Reserved
   73 00000038 00000000        DCD              PendSV_Handler ; PendSV Handler
                                                            
   74 0000003C 00000000        DCD              SysTick_Handler 
                                                            ; SysTick Handler
   75 00000040         
   76 00000040         ; External Interrupts
   77 00000040 00000000        DCD              WDT_IRQHandler ; 16: Watchdog T
                                                            imer
   78 00000044 00000000        DCD              TIMER0_IRQHandler ; 17: Timer0
   79 00000048 00000000        DCD              TIMER1_IRQHandler ; 18: Timer1
   80 0000004C 00000000        DCD              TIMER2_IRQHandler ; 19: Timer2
   81 00000050 00000000        DCD              TIMER3_IRQHandler ; 20: Timer3
   82 00000054 00000000        DCD              UART0_IRQHandler ; 21: UART0
   83 00000058 00000000        DCD              UART1_IRQHandler ; 22: UART1
   84 0000005C 00000000        DCD              UART2_IRQHandler ; 23: UART2
   85 00000060 00000000        DCD              UART3_IRQHandler ; 24: UART3
   86 00000064 00000000        DCD              PWM1_IRQHandler ; 25: PWM1



ARM Macro Assembler    Page 3 


   87 00000068 00000000        DCD              I2C0_IRQHandler ; 26: I2C0
   88 0000006C 00000000        DCD              I2C1_IRQHandler ; 27: I2C1
   89 00000070 00000000        DCD              I2C2_IRQHandler ; 28: I2C2
   90 00000074 00000000        DCD              SPI_IRQHandler ; 29: SPI
   91 00000078 00000000        DCD              SSP0_IRQHandler ; 30: SSP0
   92 0000007C 00000000        DCD              SSP1_IRQHandler ; 31: SSP1
   93 00000080 00000000        DCD              PLL0_IRQHandler ; 32: PLL0 Lock
                                                             (Main PLL)
   94 00000084 00000000        DCD              RTC_IRQHandler ; 33: Real Time 
                                                            Clock
   95 00000088 00000000        DCD              EINT0_IRQHandler ; 34: External
                                                             Interrupt 0
   96 0000008C 00000000        DCD              EINT1_IRQHandler ; 35: External
                                                             Interrupt 1
   97 00000090 00000000        DCD              EINT2_IRQHandler ; 36: External
                                                             Interrupt 2
   98 00000094 00000000        DCD              EINT3_IRQHandler ; 37: External
                                                             Interrupt 3
   99 00000098 00000000        DCD              ADC_IRQHandler 
                                                            ; 38: A/D Converter
                                                            
  100 0000009C 00000000        DCD              BOD_IRQHandler ; 39: Brown-Out 
                                                            Detect
  101 000000A0 00000000        DCD              USB_IRQHandler ; 40: USB
  102 000000A4 00000000        DCD              CAN_IRQHandler ; 41: CAN
  103 000000A8 00000000        DCD              DMA_IRQHandler ; 42: General Pu
                                                            rpose DMA
  104 000000AC 00000000        DCD              I2S_IRQHandler ; 43: I2S
  105 000000B0 00000000        DCD              ENET_IRQHandler ; 44: Ethernet
  106 000000B4 00000000        DCD              RIT_IRQHandler ; 45: Repetitive
                                                             Interrupt Timer
  107 000000B8 00000000        DCD              MCPWM_IRQHandler ; 46: Motor Co
                                                            ntrol PWM
  108 000000BC 00000000        DCD              QEI_IRQHandler ; 47: Quadrature
                                                             Encoder Interface
  109 000000C0 00000000        DCD              PLL1_IRQHandler ; 48: PLL1 Lock
                                                             (USB PLL)
  110 000000C4 00000000        DCD              USBActivity_IRQHandler ; 49: US
                                                            B Activity interrup
                                                            t to wakeup
  111 000000C8 00000000        DCD              CANActivity_IRQHandler ; 50: CA
                                                            N Activity interrup
                                                            t to wakeup
  112 000000CC         
  113 000000CC         
  114 000000CC                 IF               :LNOT::DEF:NO_CRP
  115 000000CC                 AREA             |.ARM.__at_0x02FC|, CODE, READO
NLY
  116 00000000 FFFFFFFF 
                       CRP_Key DCD              0xFFFFFFFF
  117 00000004                 ENDIF
  118 00000004         
  119 00000004         
  120 00000004                 AREA             areaData, DATA, READWRITE, NOIN
IT
  121 00000000         var2    SPACE            12
  122 0000000C         
  123 0000000C                 AREA             |.text|, CODE, READONLY
  124 00000000         



ARM Macro Assembler    Page 4 


  125 00000000         
  126 00000000         
  127 00000000         
  128 00000000         
  129 00000000         
  130 00000000         ; Reset Handler
  131 00000000         
  132 00000000         Reset_Handler
                               PROC
  133 00000000                 EXPORT           Reset_Handler             [WEAK
]
  134 00000000         
  135 00000000         ;ESERCIZIO 1
  136 00000000         
  137 00000000         ;LDR r0,=0x7A30458D ;OPERANDO 1 IN r0
  138 00000000         ;LDR r1,=0xC3159EAA ;OPERANDO 2 IN r1
  139 00000000         ;BL myUADD8 ;IN r4 AVRO' IL RISULTATO, REGISTRI r2,r3,r5
                       ,r6 INALTERATI CON PUSH-POP
  140 00000000         
  141 00000000         ;stop    B stop
  142 00000000         
  143 00000000         ;ESERCIZIO 2
  144 00000000         
  145 00000000         ;LDR r6,=var2 ;AREA DI MEMORIA RW DI 24 BYTE, PRIMI 32 B
                       IT OPERANDO1, SECONDI 32 BIT OPERANDO2, TERZI 32 PER FUT
                       URO RISULTATO
  146 00000000         ;LDR r0,=0x7A30458D ;OPERANDO 1
  147 00000000         ;LDR r1,=0xC3159EAA ;OPERANDO 2
  148 00000000         ;STR r0,[r6]
  149 00000000         ;STR r1,[r6,#4]
  150 00000000         ;BL myUSAD8 ;RISULTATO IN [r6,#8]
  151 00000000         ;stop   B stop
  152 00000000         
  153 00000000         ;ESERCIZIO 3
  154 00000000         
  155 00000000 4861            LDR              r0,=0x7A30458D ;OPERANDO 1
  156 00000002 B401            PUSH             {r0}        ;PASSAGGIO TRAMITE 
                                                            STACK
  157 00000004 4861            LDR              r0,=0xC3159EAA ;OPERANDO 2
  158 00000006         ;SMUAD
  159 00000006 B401            PUSH             {r0}
  160 00000008 B401            PUSH             {r0}        ;PUSHO VALORE INUTI
                                                            LE PER ALLOCARMI LO
                                                             SPAZIO NELLO STACK
                                                             CHE USERO' PER IL 
                                                            RISULTATO
  161 0000000A F000 F841       BL               mySMUAD
  162 0000000E BC01            POP              {r0}        ;IN r0 IL RISULTATO
                                                            
  163 00000010         ;SMUSD
  164 00000010 B401            PUSH             {r0}
  165 00000012 B401            PUSH             {r0}        ;PUSHO VALORE INUTI
                                                            LE PER ALLOCARMI LO
                                                             SPAZIO NELLO STACK
                                                             CHE USERO' PER IL 
                                                            RISULTATO
  166 00000014 F000 F871       BL               mySMUSD
  167 00000018 BC01            POP              {r0}        ;IN r0 IL RISULTATO
                                                            



ARM Macro Assembler    Page 5 


  168 0000001A E7FE    stop    B                stop
  169 0000001C         
  170 0000001C         
  171 0000001C         
  172 0000001C         
  173 0000001C         
  174 0000001C         myUADD8
  175 0000001C B500            PUSH             {LR}        ;PUSHO INDIRIZZO DI
                                                             RITORNO
  176 0000001E B46C            PUSH             {r2,r3,r5,r6} ;PUSHO REGISTRI C
                                                            HE UTILIZZO NELLA P
                                                            ROCEDURA
  177 00000020 F04F 0400       LDR              r4,=0x0     ;AZZERO REGISTRO DE
                                                            STINAZIONE
  178 00000024 F04F 02FF       LDR              r2,=0xFF    ;MASCHERA BIT A 1 N
                                                            EGLI 8 MENO SIGNIFI
                                                            CATIVI
  179 00000028         
  180 00000028         CICLO1
  181 00000028 EA00 0502       AND              r5,r0,r2    ;r0 MASCHERATO 
  182 0000002C EA01 0602       AND              r6,r1,r2    ;r1 MASCHERATO 
  183 00000030 EB05 0306       ADD              r3,r5,r6    ;ADD CON RIPORTO
  184 00000034 EA03 0302       AND              r3,r3,r2    ;TRONCAMENTO RIPORT
                                                            O
  185 00000038 441C            ADD              r4,r4,r3    ;AGGIUNGO AL RISULT
                                                            ATO CORRENTE
  186 0000003A EA4F 2202       LSL              r2,r2,#8    ;SHIFTO MASCHERA DI
                                                             UN BYTE
  187 0000003E 2A00            CMP              r2,#0x0     ;CONDIZIONE DI TERM
                                                            INAZIONE QUANDO FF 
                                                            HA SHIFTATO A DESTR
                                                            A 4 VOLTE (DIVENTA 
                                                            ZERO)
  188 00000040 D1F2            BNE              CICLO1      ;UNICO VALORE SIGNI
                                                            FICATIVO IN r4
  189 00000042         
  190 00000042 BC6C            POP              {r2,r3,r5,r6} ;POPPO REGISTRI C
                                                            HE HO SOVRASCRITTO 
                                                            RIOTTENENDO I VALOR
                                                            I PRECEDENTI
  191 00000044 BD00            POP              {PC}        ;CARICO INDIRIZZO D
                                                            I RITORNO NEL PROGR
                                                            AM COUNTER
  192 00000046         
  193 00000046         
  194 00000046         myUSAD8
  195 00000046 B500            PUSH             {LR}
  196 00000048 E92D 07BF       PUSH             {r0,r1,r2,r3,r4,r5,r7,r8,r9,r10
}
  197 0000004C B440            PUSH             {r6}
  198 0000004E 6830            LDR              r0,[r6]     ;OPERANDO 1
  199 00000050 6871            LDR              r1,[r6,#4]  ;OPERANDO 2
  200 00000052 F04F 0500       LDR              r5,=0x0     ;AZZERO REGISTRO DE
                                                            STINAZIONE
  201 00000056 F04F 02FF       LDR              r2,=0xFF    ;MASCHERA BIT A 1 N
                                                            EGLI 8 MENO SIGNIFI
                                                            CATIVI
  202 0000005A F04F 0A00       LDR              r10,=0x0
  203 0000005E         



ARM Macro Assembler    Page 6 


  204 0000005E         CICLO2
  205 0000005E EA00 0302       AND              r3,r0,r2    ;r0 MASCHERATO 
  206 00000062 EA01 0402       AND              r4,r1,r2    ;r1 MASCHERATO
  207 00000066 42A3            CMP              r3,r4       ;GUARDO QUALE TRA I
                                                             DUE E' MAGGIORE
  208 00000068 D302            BCC              OP2MAGOP1   ;SALTA SE IL SECOND
                                                            O OPERANDO E' MAGGI
                                                            ORE DEL PRIMO, CONT
                                                            ROLLO TRA UNSOGNED
  209 0000006A EBA3 0604       SUB              r6,r3,r4    ;SOTTRAZIONE OP1-OP
                                                            2
  210 0000006E E001            B                CONTINUE
  211 00000070         OP2MAGOP1
  212 00000070 EBA4 0603       SUB              r6,r4,r3    ;SOTTRAZIONE OP2-OP
                                                            1
  213 00000074         CONTINUE
  214 00000074 FA26 F60A       LSR              r6,r6,r10
  215 00000078 4435            ADD              r5,r5,r6
  216 0000007A         
  217 0000007A EA4F 2202       LSL              r2,r2,#8    ;SHIFTO MASCHERA DI
                                                             UN BYTE
  218 0000007E F10A 0A08       ADD              r10,r10,#8
  219 00000082 2A00            CMP              r2,#0x0     ;CONDIZIONE DI TERM
                                                            INAZIONE QUANDO FF 
                                                            HA SHIFTATO A DESTR
                                                            A 4 VOLTE (DIVENTA 
                                                            ZERO)
  220 00000084 D1EB            BNE              CICLO2
  221 00000086 BC40            POP              {r6}
  222 00000088 60B5            STR              r5,[r6,#8]  ;IN r5 IL RISULTATO
                                                             DELLA FUNZIONE, LO
                                                             SALVO NELLA TERZA 
                                                            WORD DELLA MIA VARI
                                                            ABILE RW
  223 0000008A E8BD 07BF       POP              {r0,r1,r2,r3,r4,r5,r7,r8,r9,r10
}
  224 0000008E BD00            POP              {PC}
  225 00000090         
  226 00000090         mySMUAD
  227 00000090 B500            PUSH             {LR}
  228 00000092 E92D 1FFF       PUSH             {r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,
r10,r11,r12}
  229 00000096 980F            LDR              r0,[SP,#60] ;PRENDO OPERANDI DA
                                                            LLO STACK
  230 00000098 9910            LDR              r1,[SP,#64]
  231 0000009A F64F 72FF       LDR              r2,=0xFFFF  ;MASCHERA BIT A 1 N
                                                            EI 16 MENO SIGNIFIC
                                                            ATIVI
  232 0000009E EA00 0302       AND              r3,r0,r2    ;r0 MASCHERATO L
  233 000000A2 EA01 0402       AND              r4,r1,r2    ;r1 MASCHERATO L
  234 000000A6 EA4F 4202       LSL              r2,r2,#16   ;SPOSTO MASCHERA SU
                                                             16 BIT ALTI, LA US
                                                            ERO' ANCHE PER ESTE
                                                            NDERE SEGNO -
  235 000000AA F44F 4A00       MOV              r10,#32768  ;MASCHERA 2^16 PER 
                                                            CONTROLLARE SEGNO
  236 000000AE EA0A 0803       AND              r8,r10,r3   ;AND TRA MASCHERA E
                                                             r3
  237 000000B2 EA0A 0904       AND              r9,r10,r4   ;AND TRA MASCHERA E



ARM Macro Assembler    Page 7 


                                                             r4
  238 000000B6 45D0            CMP              r8,r10      ;CONFRONTA RISULTAT
                                                            O AND CON MASCHERA:
                                                             SE UGUALI E' NEGAT
                                                            IVO
  239 000000B8 D100            BNE              POSITIVOr3L
  240 000000BA 4413            ADD              r3,r3,r2    ;NEGATIVO: ESTENDO 
                                                            IL SEGNO
  241 000000BC         POSITIVOr3L
  242 000000BC 45D1            CMP              r9,r10      ;CONFRONTA RISULTAT
                                                            O AND CON MASCHERA:
                                                             SE UGUALI E' NEGAT
                                                            IVO
  243 000000BE D100            BNE              POSITIVOr4L
  244 000000C0 4414            ADD              r4,r4,r2    ;NEGATIVO: ESTENDO 
                                                            IL SEGNO
  245 000000C2         POSITIVOr4L
  246 000000C2 FB03 F604       MUL              r6,r3,r4    ;RISULTATO r0L*r1L
  247 000000C6 4637            MOV              r7,r6       ;COPIO IL RISULTATO
                                                             PER LA SECONDA FUN
                                                            ZIONE
  248 000000C8         
  249 000000C8 EA00 0302       AND              r3,r0,r2    ;r0 MASCHERATO H
  250 000000CC EA01 0402       AND              r4,r1,r2    ;r1 MASCHERATO H
  251 000000D0 EA4F 4313       LSR              r3,r3,#16   ;SPOSTO A DESTRA
  252 000000D4 EA4F 4414       LSR              r4,r4,#16   ;SPOSTO A DESTRA
  253 000000D8 EA0A 0803       AND              r8,r10,r3   ;AND TRA MASCHERA r
                                                            7 E r3
  254 000000DC EA0A 0904       AND              r9,r10,r4   ;AND TRA MASCHERA r
                                                            7 E r4
  255 000000E0 45D0            CMP              r8,r10      ;CONFRONTA RISULTAT
                                                            O AND CON MASCHERA:
                                                             SE UGUALI E' NEGAT
                                                            IVO
  256 000000E2 D100            BNE              POSITIVOr3H
  257 000000E4 4413            ADD              r3,r3,r2    ;NEGATIVO: ESTENDO 
                                                            IL SEGNO
  258 000000E6         POSITIVOr3H
  259 000000E6 45D1            CMP              r9,r10      ;CONFRONTA RISULTAT
                                                            O AND CON MASCHERA:
                                                             SE UGUALI E' NEGAT
                                                            IVO
  260 000000E8 D100            BNE              POSITIVOr4H
  261 000000EA 4414            ADD              r4,r4,r2    ;NEGATIVO: ESTENDO 
                                                            IL SEGNO
  262 000000EC         POSITIVOr4H
  263 000000EC FB03 F504       MUL              r5,r3,r4    ;RISULTATO r0H*r1H
  264 000000F0         
  265 000000F0 442E            ADD              r6,r6,r5    ;SOMMO I RISULTATI(
                                                            SMUAD)
  266 000000F2 960E            STR              r6,[SP,#56] ;SALVO RISULTATO NE
                                                            LLO STACK AL POSTO 
                                                            DEL PRIMO OPERANDO
  267 000000F4         ;SUB r7,r7,r5 ;SOTTRAGGO I RISULTATI(SMUSD)    
  268 000000F4         
  269 000000F4 E8BD 1FFF       POP              {r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,
r10,r11,r12}
  270 000000F8 BD00            POP              {PC}
  271 000000FA         



ARM Macro Assembler    Page 8 


  272 000000FA         
  273 000000FA         mySMUSD
  274 000000FA B500            PUSH             {LR}
  275 000000FC E92D 1FFF       PUSH             {r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,
r10,r11,r12}
  276 00000100 980F            LDR              r0,[SP,#60] ;PRENDO OPERANDI DA
                                                            LLO STACK
  277 00000102 9910            LDR              r1,[SP,#64]
  278 00000104 F64F 72FF       LDR              r2,=0xFFFF  ;MASCHERA BIT A 1 N
                                                            EI 16 MENO SIGNIFIC
                                                            ATIVI
  279 00000108 EA00 0302       AND              r3,r0,r2    ;r0 MASCHERATO L
  280 0000010C EA01 0402       AND              r4,r1,r2    ;r1 MASCHERATO L
  281 00000110 EA4F 4202       LSL              r2,r2,#16   ;SPOSTO MASCHERA SU
                                                             16 BIT ALTI, LA US
                                                            ERO' ANCHE PER ESTE
                                                            NDERE SEGNO -
  282 00000114 F44F 4A00       MOV              r10,#32768  ;MASCHERA 2^16 PER 
                                                            CONTROLLARE SEGNO
  283 00000118 EA0A 0803       AND              r8,r10,r3   ;AND TRA MASCHERA E
                                                             r3
  284 0000011C EA0A 0904       AND              r9,r10,r4   ;AND TRA MASCHERA E
                                                             r4
  285 00000120 45D0            CMP              r8,r10      ;CONFRONTA RISULTAT
                                                            O AND CON MASCHERA:
                                                             SE UGUALI E' NEGAT
                                                            IVO
  286 00000122 D100            BNE              POSITIVOr3LSMUSD
  287 00000124 4413            ADD              r3,r3,r2    ;NEGATIVO: ESTENDO 
                                                            IL SEGNO
  288 00000126         POSITIVOr3LSMUSD
  289 00000126 45D1            CMP              r9,r10      ;CONFRONTA RISULTAT
                                                            O AND CON MASCHERA:
                                                             SE UGUALI E' NEGAT
                                                            IVO
  290 00000128 D100            BNE              POSITIVOr4LSMUSD
  291 0000012A 4414            ADD              r4,r4,r2    ;NEGATIVO: ESTENDO 
                                                            IL SEGNO
  292 0000012C         POSITIVOr4LSMUSD
  293 0000012C FB03 F604       MUL              r6,r3,r4    ;RISULTATO r0L*r1L
  294 00000130 4637            MOV              r7,r6       ;COPIO IL RISULTATO
                                                             PER LA SECONDA FUN
                                                            ZIONE
  295 00000132         
  296 00000132 EA00 0302       AND              r3,r0,r2    ;r0 MASCHERATO H
  297 00000136 EA01 0402       AND              r4,r1,r2    ;r1 MASCHERATO H
  298 0000013A EA4F 4313       LSR              r3,r3,#16   ;SPOSTO A DESTRA
  299 0000013E EA4F 4414       LSR              r4,r4,#16   ;SPOSTO A DESTRA
  300 00000142 EA0A 0803       AND              r8,r10,r3   ;AND TRA MASCHERA r
                                                            7 E r3
  301 00000146 EA0A 0904       AND              r9,r10,r4   ;AND TRA MASCHERA r
                                                            7 E r4
  302 0000014A 45D0            CMP              r8,r10      ;CONFRONTA RISULTAT
                                                            O AND CON MASCHERA:
                                                             SE UGUALI E' NEGAT
                                                            IVO
  303 0000014C D100            BNE              POSITIVOr3HSMUSD
  304 0000014E 4413            ADD              r3,r3,r2    ;NEGATIVO: ESTENDO 
                                                            IL SEGNO



ARM Macro Assembler    Page 9 


  305 00000150         POSITIVOr3HSMUSD
  306 00000150 45D1            CMP              r9,r10      ;CONFRONTA RISULTAT
                                                            O AND CON MASCHERA:
                                                             SE UGUALI E' NEGAT
                                                            IVO
  307 00000152 D100            BNE              POSITIVOr4HSMUSD
  308 00000154 4414            ADD              r4,r4,r2    ;NEGATIVO: ESTENDO 
                                                            IL SEGNO
  309 00000156         POSITIVOr4HSMUSD
  310 00000156 FB03 F504       MUL              r5,r3,r4    ;RISULTATO r0H*r1H
  311 0000015A         
  312 0000015A         ;ADD r6,r6,r5 ;SOMMO I RISULTATI(SMUAD)
  313 0000015A EBA7 0705       SUB              r7,r7,r5    ;SOTTRAGGO I RISULT
                                                            ATI(SMUSD)    
  314 0000015E 970E            STR              r7,[SP,#56] ;SALVO RISULTATO NE
                                                            LLO STACK AL POSTO 
                                                            DEL PRIMO OPERANDO
  315 00000160         
  316 00000160 E8BD 1FFF       POP              {r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,
r10,r11,r12}
  317 00000164 BD00            POP              {PC}
  318 00000166         
  319 00000166         
  320 00000166         
  321 00000166         
  322 00000166                 ENDP
  323 00000166         
  324 00000166         
  325 00000166         
  326 00000166         
  327 00000166         ; Dummy Exception Handlers (infinite loops which can be 
                       modified)
  328 00000166         
  329 00000166         NMI_Handler
                               PROC
  330 00000166                 EXPORT           NMI_Handler               [WEAK
]
  331 00000166 E7FE            B                .
  332 00000168                 ENDP
  334 00000168         HardFault_Handler
                               PROC
  335 00000168                 EXPORT           HardFault_Handler         [WEAK
]
  336 00000168 E7FE            B                .
  337 0000016A                 ENDP
  339 0000016A         MemManage_Handler
                               PROC
  340 0000016A                 EXPORT           MemManage_Handler         [WEAK
]
  341 0000016A E7FE            B                .
  342 0000016C                 ENDP
  344 0000016C         BusFault_Handler
                               PROC
  345 0000016C                 EXPORT           BusFault_Handler          [WEAK
]
  346 0000016C E7FE            B                .
  347 0000016E                 ENDP
  349 0000016E         UsageFault_Handler
                               PROC



ARM Macro Assembler    Page 10 


  350 0000016E                 EXPORT           UsageFault_Handler        [WEAK
]
  351 0000016E E7FE            B                .
  352 00000170                 ENDP
  353 00000170         SVC_Handler
                               PROC
  354 00000170                 EXPORT           SVC_Handler               [WEAK
]
  355 00000170 E7FE            B                .
  356 00000172                 ENDP
  358 00000172         DebugMon_Handler
                               PROC
  359 00000172                 EXPORT           DebugMon_Handler          [WEAK
]
  360 00000172 E7FE            B                .
  361 00000174                 ENDP
  362 00000174         PendSV_Handler
                               PROC
  363 00000174                 EXPORT           PendSV_Handler            [WEAK
]
  364 00000174 E7FE            B                .
  365 00000176                 ENDP
  366 00000176         SysTick_Handler
                               PROC
  367 00000176                 EXPORT           SysTick_Handler           [WEAK
]
  368 00000176 E7FE            B                .
  369 00000178                 ENDP
  370 00000178         
  371 00000178         Default_Handler
                               PROC
  372 00000178         
  373 00000178                 EXPORT           WDT_IRQHandler            [WEAK
]
  374 00000178                 EXPORT           TIMER0_IRQHandler         [WEAK
]
  375 00000178                 EXPORT           TIMER1_IRQHandler         [WEAK
]
  376 00000178                 EXPORT           TIMER2_IRQHandler         [WEAK
]
  377 00000178                 EXPORT           TIMER3_IRQHandler         [WEAK
]
  378 00000178                 EXPORT           UART0_IRQHandler          [WEAK
]
  379 00000178                 EXPORT           UART1_IRQHandler          [WEAK
]
  380 00000178                 EXPORT           UART2_IRQHandler          [WEAK
]
  381 00000178                 EXPORT           UART3_IRQHandler          [WEAK
]
  382 00000178                 EXPORT           PWM1_IRQHandler           [WEAK
]
  383 00000178                 EXPORT           I2C0_IRQHandler           [WEAK
]
  384 00000178                 EXPORT           I2C1_IRQHandler           [WEAK
]
  385 00000178                 EXPORT           I2C2_IRQHandler           [WEAK
]
  386 00000178                 EXPORT           SPI_IRQHandler            [WEAK



ARM Macro Assembler    Page 11 


]
  387 00000178                 EXPORT           SSP0_IRQHandler           [WEAK
]
  388 00000178                 EXPORT           SSP1_IRQHandler           [WEAK
]
  389 00000178                 EXPORT           PLL0_IRQHandler           [WEAK
]
  390 00000178                 EXPORT           RTC_IRQHandler            [WEAK
]
  391 00000178                 EXPORT           EINT0_IRQHandler          [WEAK
]
  392 00000178                 EXPORT           EINT1_IRQHandler          [WEAK
]
  393 00000178                 EXPORT           EINT2_IRQHandler          [WEAK
]
  394 00000178                 EXPORT           EINT3_IRQHandler          [WEAK
]
  395 00000178                 EXPORT           ADC_IRQHandler            [WEAK
]
  396 00000178                 EXPORT           BOD_IRQHandler            [WEAK
]
  397 00000178                 EXPORT           USB_IRQHandler            [WEAK
]
  398 00000178                 EXPORT           CAN_IRQHandler            [WEAK
]
  399 00000178                 EXPORT           DMA_IRQHandler            [WEAK
]
  400 00000178                 EXPORT           I2S_IRQHandler            [WEAK
]
  401 00000178                 EXPORT           ENET_IRQHandler           [WEAK
]
  402 00000178                 EXPORT           RIT_IRQHandler            [WEAK
]
  403 00000178                 EXPORT           MCPWM_IRQHandler          [WEAK
]
  404 00000178                 EXPORT           QEI_IRQHandler            [WEAK
]
  405 00000178                 EXPORT           PLL1_IRQHandler           [WEAK
]
  406 00000178                 EXPORT           USBActivity_IRQHandler    [WEAK
]
  407 00000178                 EXPORT           CANActivity_IRQHandler    [WEAK
]
  408 00000178         
  409 00000178         WDT_IRQHandler
  410 00000178         TIMER0_IRQHandler
  411 00000178         TIMER1_IRQHandler
  412 00000178         TIMER2_IRQHandler
  413 00000178         TIMER3_IRQHandler
  414 00000178         UART0_IRQHandler
  415 00000178         UART1_IRQHandler
  416 00000178         UART2_IRQHandler
  417 00000178         UART3_IRQHandler
  418 00000178         PWM1_IRQHandler
  419 00000178         I2C0_IRQHandler
  420 00000178         I2C1_IRQHandler
  421 00000178         I2C2_IRQHandler
  422 00000178         SPI_IRQHandler
  423 00000178         SSP0_IRQHandler



ARM Macro Assembler    Page 12 


  424 00000178         SSP1_IRQHandler
  425 00000178         PLL0_IRQHandler
  426 00000178         RTC_IRQHandler
  427 00000178         EINT0_IRQHandler
  428 00000178         EINT1_IRQHandler
  429 00000178         EINT2_IRQHandler
  430 00000178         EINT3_IRQHandler
  431 00000178         ADC_IRQHandler
  432 00000178         BOD_IRQHandler
  433 00000178         USB_IRQHandler
  434 00000178         CAN_IRQHandler
  435 00000178         DMA_IRQHandler
  436 00000178         I2S_IRQHandler
  437 00000178         ENET_IRQHandler
  438 00000178         RIT_IRQHandler
  439 00000178         MCPWM_IRQHandler
  440 00000178         QEI_IRQHandler
  441 00000178         PLL1_IRQHandler
  442 00000178         USBActivity_IRQHandler
  443 00000178         CANActivity_IRQHandler
  444 00000178         
  445 00000178 E7FE            B                .
  446 0000017A         
  447 0000017A                 ENDP
  448 0000017A         
  449 0000017A         
  450 0000017A 00 00           ALIGN
  451 0000017C         
  452 0000017C         
  453 0000017C         ; User Initial Stack & Heap
  454 0000017C         
  455 0000017C                 IF               :DEF:__MICROLIB
  462 0000017C         
  463 0000017C         ;IMPORT  __use_two_region_memory
  464 0000017C                 EXPORT           __user_initial_stackheap
  465 0000017C         __user_initial_stackheap
  466 0000017C         
  467 0000017C 4804            LDR              R0, =  Heap_Mem
  468 0000017E 4905            LDR              R1, =(Stack_Mem + Stack_Size)
  469 00000180 4A03            LDR              R2, = (Heap_Mem +  Heap_Size)
  470 00000182 4B05            LDR              R3, = Stack_Mem
  471 00000184 4770            BX               LR
  472 00000186         
  473 00000186 00 00           ALIGN
  474 00000188         
  475 00000188                 ENDIF
  476 00000188         
  477 00000188         
  478 00000188                 END
              7A30458D 
              C3159EAA 
              00000000 
              00000200 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=.\startu
p_lpc17xx.d -o.\startup_lpc17xx.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\In
clude -IC:\Keil\ARM\Inc\NXP\LPC17xx --predefine="__EVAL SETA 1" --list=.\startu
p_lpc17xx.lst startup_LPC17xx.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 33 in file startup_LPC17xx.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 34 in file startup_LPC17xx.s
   Uses
      At line 468 in file startup_LPC17xx.s
      At line 470 in file startup_LPC17xx.s

__initial_sp 00000200

Symbol: __initial_sp
   Definitions
      At line 35 in file startup_LPC17xx.s
   Uses
      At line 59 in file startup_LPC17xx.s
Comment: __initial_sp used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 44 in file startup_LPC17xx.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 46 in file startup_LPC17xx.s
   Uses
      At line 467 in file startup_LPC17xx.s
      At line 469 in file startup_LPC17xx.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 45 in file startup_LPC17xx.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 47 in file startup_LPC17xx.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 56 in file startup_LPC17xx.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 59 in file startup_LPC17xx.s
   Uses
      At line 57 in file startup_LPC17xx.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x02FC 00000000

Symbol: .ARM.__at_0x02FC
   Definitions
      At line 115 in file startup_LPC17xx.s
   Uses
      None
Comment: .ARM.__at_0x02FC unused
CRP_Key 00000000

Symbol: CRP_Key
   Definitions
      At line 116 in file startup_LPC17xx.s
   Uses
      None
Comment: CRP_Key unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

areaData 00000000

Symbol: areaData
   Definitions
      At line 120 in file startup_LPC17xx.s
   Uses
      None
Comment: areaData unused
var2 00000000

Symbol: var2
   Definitions
      At line 121 in file startup_LPC17xx.s
   Uses
      None
Comment: var2 unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 123 in file startup_LPC17xx.s
   Uses
      None
Comment: .text unused
ADC_IRQHandler 00000178

Symbol: ADC_IRQHandler
   Definitions
      At line 431 in file startup_LPC17xx.s
   Uses
      At line 99 in file startup_LPC17xx.s
      At line 395 in file startup_LPC17xx.s

BOD_IRQHandler 00000178

Symbol: BOD_IRQHandler
   Definitions
      At line 432 in file startup_LPC17xx.s
   Uses
      At line 100 in file startup_LPC17xx.s
      At line 396 in file startup_LPC17xx.s

BusFault_Handler 0000016C

Symbol: BusFault_Handler
   Definitions
      At line 344 in file startup_LPC17xx.s
   Uses
      At line 64 in file startup_LPC17xx.s
      At line 345 in file startup_LPC17xx.s

CANActivity_IRQHandler 00000178

Symbol: CANActivity_IRQHandler
   Definitions
      At line 443 in file startup_LPC17xx.s
   Uses
      At line 111 in file startup_LPC17xx.s
      At line 407 in file startup_LPC17xx.s

CAN_IRQHandler 00000178

Symbol: CAN_IRQHandler
   Definitions
      At line 434 in file startup_LPC17xx.s
   Uses
      At line 102 in file startup_LPC17xx.s
      At line 398 in file startup_LPC17xx.s

CICLO1 00000028

Symbol: CICLO1
   Definitions
      At line 180 in file startup_LPC17xx.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 188 in file startup_LPC17xx.s
Comment: CICLO1 used once
CICLO2 0000005E

Symbol: CICLO2
   Definitions
      At line 204 in file startup_LPC17xx.s
   Uses
      At line 220 in file startup_LPC17xx.s
Comment: CICLO2 used once
CONTINUE 00000074

Symbol: CONTINUE
   Definitions
      At line 213 in file startup_LPC17xx.s
   Uses
      At line 210 in file startup_LPC17xx.s
Comment: CONTINUE used once
DMA_IRQHandler 00000178

Symbol: DMA_IRQHandler
   Definitions
      At line 435 in file startup_LPC17xx.s
   Uses
      At line 103 in file startup_LPC17xx.s
      At line 399 in file startup_LPC17xx.s

DebugMon_Handler 00000172

Symbol: DebugMon_Handler
   Definitions
      At line 358 in file startup_LPC17xx.s
   Uses
      At line 71 in file startup_LPC17xx.s
      At line 359 in file startup_LPC17xx.s

Default_Handler 00000178

Symbol: Default_Handler
   Definitions
      At line 371 in file startup_LPC17xx.s
   Uses
      None
Comment: Default_Handler unused
EINT0_IRQHandler 00000178

Symbol: EINT0_IRQHandler
   Definitions
      At line 427 in file startup_LPC17xx.s
   Uses
      At line 95 in file startup_LPC17xx.s
      At line 391 in file startup_LPC17xx.s

EINT1_IRQHandler 00000178

Symbol: EINT1_IRQHandler
   Definitions
      At line 428 in file startup_LPC17xx.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 96 in file startup_LPC17xx.s
      At line 392 in file startup_LPC17xx.s

EINT2_IRQHandler 00000178

Symbol: EINT2_IRQHandler
   Definitions
      At line 429 in file startup_LPC17xx.s
   Uses
      At line 97 in file startup_LPC17xx.s
      At line 393 in file startup_LPC17xx.s

EINT3_IRQHandler 00000178

Symbol: EINT3_IRQHandler
   Definitions
      At line 430 in file startup_LPC17xx.s
   Uses
      At line 98 in file startup_LPC17xx.s
      At line 394 in file startup_LPC17xx.s

ENET_IRQHandler 00000178

Symbol: ENET_IRQHandler
   Definitions
      At line 437 in file startup_LPC17xx.s
   Uses
      At line 105 in file startup_LPC17xx.s
      At line 401 in file startup_LPC17xx.s

HardFault_Handler 00000168

Symbol: HardFault_Handler
   Definitions
      At line 334 in file startup_LPC17xx.s
   Uses
      At line 62 in file startup_LPC17xx.s
      At line 335 in file startup_LPC17xx.s

I2C0_IRQHandler 00000178

Symbol: I2C0_IRQHandler
   Definitions
      At line 419 in file startup_LPC17xx.s
   Uses
      At line 87 in file startup_LPC17xx.s
      At line 383 in file startup_LPC17xx.s

I2C1_IRQHandler 00000178

Symbol: I2C1_IRQHandler
   Definitions
      At line 420 in file startup_LPC17xx.s
   Uses
      At line 88 in file startup_LPC17xx.s
      At line 384 in file startup_LPC17xx.s

I2C2_IRQHandler 00000178




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

Symbol: I2C2_IRQHandler
   Definitions
      At line 421 in file startup_LPC17xx.s
   Uses
      At line 89 in file startup_LPC17xx.s
      At line 385 in file startup_LPC17xx.s

I2S_IRQHandler 00000178

Symbol: I2S_IRQHandler
   Definitions
      At line 436 in file startup_LPC17xx.s
   Uses
      At line 104 in file startup_LPC17xx.s
      At line 400 in file startup_LPC17xx.s

MCPWM_IRQHandler 00000178

Symbol: MCPWM_IRQHandler
   Definitions
      At line 439 in file startup_LPC17xx.s
   Uses
      At line 107 in file startup_LPC17xx.s
      At line 403 in file startup_LPC17xx.s

MemManage_Handler 0000016A

Symbol: MemManage_Handler
   Definitions
      At line 339 in file startup_LPC17xx.s
   Uses
      At line 63 in file startup_LPC17xx.s
      At line 340 in file startup_LPC17xx.s

NMI_Handler 00000166

Symbol: NMI_Handler
   Definitions
      At line 329 in file startup_LPC17xx.s
   Uses
      At line 61 in file startup_LPC17xx.s
      At line 330 in file startup_LPC17xx.s

OP2MAGOP1 00000070

Symbol: OP2MAGOP1
   Definitions
      At line 211 in file startup_LPC17xx.s
   Uses
      At line 208 in file startup_LPC17xx.s
Comment: OP2MAGOP1 used once
PLL0_IRQHandler 00000178

Symbol: PLL0_IRQHandler
   Definitions
      At line 425 in file startup_LPC17xx.s
   Uses
      At line 93 in file startup_LPC17xx.s
      At line 389 in file startup_LPC17xx.s



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols


PLL1_IRQHandler 00000178

Symbol: PLL1_IRQHandler
   Definitions
      At line 441 in file startup_LPC17xx.s
   Uses
      At line 109 in file startup_LPC17xx.s
      At line 405 in file startup_LPC17xx.s

POSITIVOr3H 000000E6

Symbol: POSITIVOr3H
   Definitions
      At line 258 in file startup_LPC17xx.s
   Uses
      At line 256 in file startup_LPC17xx.s
Comment: POSITIVOr3H used once
POSITIVOr3HSMUSD 00000150

Symbol: POSITIVOr3HSMUSD
   Definitions
      At line 305 in file startup_LPC17xx.s
   Uses
      At line 303 in file startup_LPC17xx.s
Comment: POSITIVOr3HSMUSD used once
POSITIVOr3L 000000BC

Symbol: POSITIVOr3L
   Definitions
      At line 241 in file startup_LPC17xx.s
   Uses
      At line 239 in file startup_LPC17xx.s
Comment: POSITIVOr3L used once
POSITIVOr3LSMUSD 00000126

Symbol: POSITIVOr3LSMUSD
   Definitions
      At line 288 in file startup_LPC17xx.s
   Uses
      At line 286 in file startup_LPC17xx.s
Comment: POSITIVOr3LSMUSD used once
POSITIVOr4H 000000EC

Symbol: POSITIVOr4H
   Definitions
      At line 262 in file startup_LPC17xx.s
   Uses
      At line 260 in file startup_LPC17xx.s
Comment: POSITIVOr4H used once
POSITIVOr4HSMUSD 00000156

Symbol: POSITIVOr4HSMUSD
   Definitions
      At line 309 in file startup_LPC17xx.s
   Uses
      At line 307 in file startup_LPC17xx.s
Comment: POSITIVOr4HSMUSD used once
POSITIVOr4L 000000C2



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols


Symbol: POSITIVOr4L
   Definitions
      At line 245 in file startup_LPC17xx.s
   Uses
      At line 243 in file startup_LPC17xx.s
Comment: POSITIVOr4L used once
POSITIVOr4LSMUSD 0000012C

Symbol: POSITIVOr4LSMUSD
   Definitions
      At line 292 in file startup_LPC17xx.s
   Uses
      At line 290 in file startup_LPC17xx.s
Comment: POSITIVOr4LSMUSD used once
PWM1_IRQHandler 00000178

Symbol: PWM1_IRQHandler
   Definitions
      At line 418 in file startup_LPC17xx.s
   Uses
      At line 86 in file startup_LPC17xx.s
      At line 382 in file startup_LPC17xx.s

PendSV_Handler 00000174

Symbol: PendSV_Handler
   Definitions
      At line 362 in file startup_LPC17xx.s
   Uses
      At line 73 in file startup_LPC17xx.s
      At line 363 in file startup_LPC17xx.s

QEI_IRQHandler 00000178

Symbol: QEI_IRQHandler
   Definitions
      At line 440 in file startup_LPC17xx.s
   Uses
      At line 108 in file startup_LPC17xx.s
      At line 404 in file startup_LPC17xx.s

RIT_IRQHandler 00000178

Symbol: RIT_IRQHandler
   Definitions
      At line 438 in file startup_LPC17xx.s
   Uses
      At line 106 in file startup_LPC17xx.s
      At line 402 in file startup_LPC17xx.s

RTC_IRQHandler 00000178

Symbol: RTC_IRQHandler
   Definitions
      At line 426 in file startup_LPC17xx.s
   Uses
      At line 94 in file startup_LPC17xx.s
      At line 390 in file startup_LPC17xx.s



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols


Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 132 in file startup_LPC17xx.s
   Uses
      At line 60 in file startup_LPC17xx.s
      At line 133 in file startup_LPC17xx.s

SPI_IRQHandler 00000178

Symbol: SPI_IRQHandler
   Definitions
      At line 422 in file startup_LPC17xx.s
   Uses
      At line 90 in file startup_LPC17xx.s
      At line 386 in file startup_LPC17xx.s

SSP0_IRQHandler 00000178

Symbol: SSP0_IRQHandler
   Definitions
      At line 423 in file startup_LPC17xx.s
   Uses
      At line 91 in file startup_LPC17xx.s
      At line 387 in file startup_LPC17xx.s

SSP1_IRQHandler 00000178

Symbol: SSP1_IRQHandler
   Definitions
      At line 424 in file startup_LPC17xx.s
   Uses
      At line 92 in file startup_LPC17xx.s
      At line 388 in file startup_LPC17xx.s

SVC_Handler 00000170

Symbol: SVC_Handler
   Definitions
      At line 353 in file startup_LPC17xx.s
   Uses
      At line 70 in file startup_LPC17xx.s
      At line 354 in file startup_LPC17xx.s

SysTick_Handler 00000176

Symbol: SysTick_Handler
   Definitions
      At line 366 in file startup_LPC17xx.s
   Uses
      At line 74 in file startup_LPC17xx.s
      At line 367 in file startup_LPC17xx.s

TIMER0_IRQHandler 00000178

Symbol: TIMER0_IRQHandler
   Definitions



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Relocatable symbols

      At line 410 in file startup_LPC17xx.s
   Uses
      At line 78 in file startup_LPC17xx.s
      At line 374 in file startup_LPC17xx.s

TIMER1_IRQHandler 00000178

Symbol: TIMER1_IRQHandler
   Definitions
      At line 411 in file startup_LPC17xx.s
   Uses
      At line 79 in file startup_LPC17xx.s
      At line 375 in file startup_LPC17xx.s

TIMER2_IRQHandler 00000178

Symbol: TIMER2_IRQHandler
   Definitions
      At line 412 in file startup_LPC17xx.s
   Uses
      At line 80 in file startup_LPC17xx.s
      At line 376 in file startup_LPC17xx.s

TIMER3_IRQHandler 00000178

Symbol: TIMER3_IRQHandler
   Definitions
      At line 413 in file startup_LPC17xx.s
   Uses
      At line 81 in file startup_LPC17xx.s
      At line 377 in file startup_LPC17xx.s

UART0_IRQHandler 00000178

Symbol: UART0_IRQHandler
   Definitions
      At line 414 in file startup_LPC17xx.s
   Uses
      At line 82 in file startup_LPC17xx.s
      At line 378 in file startup_LPC17xx.s

UART1_IRQHandler 00000178

Symbol: UART1_IRQHandler
   Definitions
      At line 415 in file startup_LPC17xx.s
   Uses
      At line 83 in file startup_LPC17xx.s
      At line 379 in file startup_LPC17xx.s

UART2_IRQHandler 00000178

Symbol: UART2_IRQHandler
   Definitions
      At line 416 in file startup_LPC17xx.s
   Uses
      At line 84 in file startup_LPC17xx.s
      At line 380 in file startup_LPC17xx.s




ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Relocatable symbols

UART3_IRQHandler 00000178

Symbol: UART3_IRQHandler
   Definitions
      At line 417 in file startup_LPC17xx.s
   Uses
      At line 85 in file startup_LPC17xx.s
      At line 381 in file startup_LPC17xx.s

USBActivity_IRQHandler 00000178

Symbol: USBActivity_IRQHandler
   Definitions
      At line 442 in file startup_LPC17xx.s
   Uses
      At line 110 in file startup_LPC17xx.s
      At line 406 in file startup_LPC17xx.s

USB_IRQHandler 00000178

Symbol: USB_IRQHandler
   Definitions
      At line 433 in file startup_LPC17xx.s
   Uses
      At line 101 in file startup_LPC17xx.s
      At line 397 in file startup_LPC17xx.s

UsageFault_Handler 0000016E

Symbol: UsageFault_Handler
   Definitions
      At line 349 in file startup_LPC17xx.s
   Uses
      At line 65 in file startup_LPC17xx.s
      At line 350 in file startup_LPC17xx.s

WDT_IRQHandler 00000178

Symbol: WDT_IRQHandler
   Definitions
      At line 409 in file startup_LPC17xx.s
   Uses
      At line 77 in file startup_LPC17xx.s
      At line 373 in file startup_LPC17xx.s

__user_initial_stackheap 0000017C

Symbol: __user_initial_stackheap
   Definitions
      At line 465 in file startup_LPC17xx.s
   Uses
      At line 464 in file startup_LPC17xx.s
Comment: __user_initial_stackheap used once
mySMUAD 00000090

Symbol: mySMUAD
   Definitions
      At line 226 in file startup_LPC17xx.s
   Uses



ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Relocatable symbols

      At line 161 in file startup_LPC17xx.s
Comment: mySMUAD used once
mySMUSD 000000FA

Symbol: mySMUSD
   Definitions
      At line 273 in file startup_LPC17xx.s
   Uses
      At line 166 in file startup_LPC17xx.s
Comment: mySMUSD used once
myUADD8 0000001C

Symbol: myUADD8
   Definitions
      At line 174 in file startup_LPC17xx.s
   Uses
      None
Comment: myUADD8 unused
myUSAD8 00000046

Symbol: myUSAD8
   Definitions
      At line 194 in file startup_LPC17xx.s
   Uses
      None
Comment: myUSAD8 unused
stop 0000001A

Symbol: stop
   Definitions
      At line 168 in file startup_LPC17xx.s
   Uses
      At line 168 in file startup_LPC17xx.s
Comment: stop used once
65 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 42 in file startup_LPC17xx.s
   Uses
      At line 46 in file startup_LPC17xx.s
      At line 469 in file startup_LPC17xx.s

Stack_Size 00000200

Symbol: Stack_Size
   Definitions
      At line 31 in file startup_LPC17xx.s
   Uses
      At line 34 in file startup_LPC17xx.s
      At line 468 in file startup_LPC17xx.s

2 symbols
417 symbols in table
